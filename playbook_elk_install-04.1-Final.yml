---
- name: Install and Configure ELK Stack
  hosts: localhost
  gather_facts: yes
  become: true

  tasks:
    - name: Update apt package cache
      apt:
        update_cache: yes

    - name: Check if Elasticsearch package is available
      command: "apt list -a elasticsearch"
      register: elasticsearch_check
      ignore_errors: yes

    - name: Install apt package requirements
      apt:
        name: "{{ item }}"
        state: present
        update_cache: yes
      loop:
        - gpg-agent
        - curl
        - procps
        - net-tools
        - gnupg
      when: "'apt-transport-https' not in ansible_facts.packages | default([])"

    - name: Download and import Elastic GPG key
      get_url:
        url: https://artifacts.elastic.co/GPG-KEY-elasticsearch
        dest: /tmp/GPG-KEY-elasticsearch
      become: yes
      when: "'elasticsearch' not in ansible_facts.packages | default([])"

    - name: Create GPG directory
      file:
        path: /root/.gnupg
        state: directory
      become: yes
      when: "'apt-transport-https' not in ansible_facts.packages | default([])"

    - name: Import Elastic GPG key
      shell: gpg --quiet --no-options --no-default-keyring --secret-keyring /usr/share/keyrings/elasticsearch-keyring.gpg --keyring /usr/share/keyrings/elasticsearch-keyring.gpg --import /tmp/GPG-KEY-elasticsearch
      become: yes
      when: "'apt-transport-https' not in ansible_facts.packages | default([])"

    - name: Install apt-transport-https
      apt:
        name: apt-transport-https
        state: present
      when: "'apt-transport-https' not in ansible_facts.packages | default([])"

    - name: Ensure /etc/apt/sources.list.d/ directory exists
      file:
        path: /etc/apt/sources.list.d/
        state: directory
      become: yes

    - name: Add Elastic APT repository
      block:
        - name: Verificar se o arquivo do repositório existe
          stat:
            path: /etc/apt/sources.list.d/elastic-8.x.list
          register: repo_file_result

        - name: Criar arquivo do repositório
          copy:
            content: "deb [signed-by=/usr/share/keyrings/elasticsearch-keyring.gpg] https://artifacts.elastic.co/packages/8.x/apt stable main"
            dest: /etc/apt/sources.list.d/elastic-8.x.list
          when: repo_file_result.stat is not defined or not repo_file_result.stat.exists

        - name: Check if Elasticsearch package is available (after adding repository)
          command: "apt list -a elasticsearch"
          register: elasticsearch_check_after_repo
          ignore_errors: yes

        - name: Fail if Elasticsearch package is not available
          fail:
            msg: "Elasticsearch package is not available. Check the repository configuration."
          when: "'elasticsearch' not in ansible_facts.packages | default([]) and elasticsearch_check_after_repo.rc != 0"
      when: "'/etc/apt/sources.list.d/elastic-8.x.list' not in (ansible_facts.files | default([]) | map(attribute='path'))"

    - name: Backup Elasticsearch configuration file
      command: "cp /etc/elasticsearch/elasticsearch.yml /etc/elasticsearch/elasticsearch.yml.old"
      become: yes
      when: "'elasticsearch' in ansible_facts.packages | default([])"

    - name: Backup Kibana configuration file
      command: "cp /etc/kibana/kibana.yml /etc/kibana/kibana.yml.old"
      become: yes
      when: "'kibana' in ansible_facts.packages | default([])"

    - name: Create new Elasticsearch configuration file
      copy:
        content: |
          path.data: /var/lib/elasticsearch
          path.logs: /var/log/elasticsearch
          network.host: 0.0.0.0
          http.port: 9200
          xpack.security.enabled: false
          xpack.security.enrollment.enabled: false
          xpack.security.http.ssl.enabled: false
          xpack.security.transport.ssl.enabled: false
          cluster.initial_master_nodes: ["geral-ubuntu-02"]
          http.host: 0.0.0.0
        dest: /etc/elasticsearch/elasticsearch.yml
      become: yes
      when: "'elasticsearch' in ansible_facts.packages | default([])"

    - name: Create new Kibana configuration file
      copy:
        content: |
          server.port: 5601
          server.host: "0.0.0.0"
          elasticsearch.username: "kibana_system"
          elasticsearch.password: "pass"
          xpack.security.enabled: false
          logging.appenders.file.type: file
          logging.appenders.file.fileName: /var/log/kibana/kibana.log
          logging.appenders.file.layout.type: json
          logging.root.appenders[0]: default
          logging.root.appenders[1]: file
          pid.file: /run/kibana/kibana.pid
        dest: /etc/kibana/kibana.yml
      become: yes
      when: "'kibana' in ansible_facts.packages | default([])"

    - name: Install Elasticsearch, Kibana, and Logstash
      apt:
        name: "{{ item }}"
        state: present
      loop:
        - elasticsearch
        - kibana
        - logstash
      when: "'{{ item }}' not in ansible_facts.packages | default([])"
      notify: restart_elk_services

  handlers:
    - name: restart_elk_services
      systemd:
        name: "{{ item }}"
        enabled: yes
        state: restarted
      loop:
        - elasticsearch
        - kibana
        - logstash
      listen: restart_elk_services

